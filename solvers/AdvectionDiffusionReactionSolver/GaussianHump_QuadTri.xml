<?xml version="1.0" encoding="utf-8"?>

<NEKTAR>

  <GEOMETRY DIM="2" SPACE="2">
    
    <VERTEX>
      <!-- Always must have four values per entry. -->      
      <V ID="0"> -1.0   -1.0    0.0 </V>
      <V ID="1">  0.0   -1.0    0.0 </V>
      <V ID="2">  1.0   -1.0    0.0 </V>
      <V ID="3"> -1.0    0.0    0.0 </V>
      <V ID="4">  0.0    0.0    0.0 </V>
      <V ID="5">  1.0    0.0    0.0 </V>
      <V ID="6"> -1.0    1.0    0.0 </V>
      <V ID="7">  0.0    1.0    0.0 </V>
      <V ID="8">  1.0    1.0    0.0 </V>
    </VERTEX>

    <EDGE>
      <E ID="0">  0 1  </E>
      <E ID="1">  1 2  </E>
      <E ID="2">  0 3  </E>
      <E ID="3">  1 4  </E>
      <E ID="4">  2 5  </E>
      <E ID="5">  3 4  </E>
      <E ID="6">  4 5  </E>
      <E ID="7">  6 3  </E>
      <E ID="8">  4 7  </E>
      <E ID="9">  5 8  </E>
      <E ID="10"> 6 7  </E>
      <E ID="11"> 7 8  </E>
      <E ID="12"> 0 4  </E>
      <E ID="13"> 1 5  </E>
    </EDGE>
    
    <!-- Q - quads, T - triangles, S - segments, E - tet, P - pyramid, R - prism, H - hex -->
    <!-- Only certain element types are appropriate for the given dimension (dim on mesh) -->
    <!-- Can also use faces to define 3-D elements.  Specify with F[1] for face 1, for example. -->
    <ELEMENT>
      <T ID="0"> 0 3 12 </T>
      <T ID="1"> 2 12 5 </T>
      <T ID="2"> 1 4 13 </T>
      <T ID="3"> 3 13 6 </T>
      <Q ID="4"> 5 8 10 7 </Q>
      <Q ID="5"> 8 6 9 11 </Q>
    </ELEMENT>
    
    <!-- V - vertex, S - Segment, E - edge, F - face -->
    <COMPOSITE>
      <C ID="0"> T[0-3] </C>
      <C ID="1"> Q[0-1] </C>
      <C ID="2"> E[0,1,2,4,7,9,10,11] </C>
    </COMPOSITE>

    <DOMAIN> C[0-1] </DOMAIN>

  </GEOMETRY>
  
  <EXPANSIONS>
    <E COMPOSITE="C[0]" NUMMODES="11" TYPE="MODIFIED" />
    <E COMPOSITE="C[1]" NUMMODES="11" TYPE="MODIFIED" />
  </EXPANSIONS>

  <CONDITIONS>

    <PARAMETERS>
      <P> TimeStep   = 0.0001 </P>
      <P> NumSteps      = 5000  </P>
      <P> FinTime    = TimeStep*NumSteps </P>
      <P> IO_CheckSteps = 1000   </P>
      <P> IO_InfoSteps  = 500 </P>
    </PARAMETERS>

    <SOLVERINFO>
      <I PROPERTY="EQType" VALUE="UnsteadyAdvection"/>
      <I PROPERTY="Projection" VALUE="Continuous"/>
    </SOLVERINFO> 

    <VARIABLES>
      <V ID="0"> u </V> 
    </VARIABLES>

    <BOUNDARYREGIONS>
      <B ID="0"> C[2] </B>
    </BOUNDARYREGIONS>

    <BOUNDARYCONDITIONS>
      <REGION REF="0">
        <D VAR="u" VALUE="0" />
      </REGION>
    </BOUNDARYCONDITIONS>

    <USERDEFINEDEQNS>
      <F LHS="Vx" VALUE="2*PI*y" />
      <F LHS="Vy" VALUE="-2*PI*x" />
    </USERDEFINEDEQNS>   
    
    <EXACTSOLUTION>
      <F VAR="u" VALUE="exp(-(((x*cos(2*PI*FinTime) + y*sin(2*PI*FinTime)+0.5)*(x*cos(2*PI*FinTime) + y*sin(2*PI*FinTime)+0.5))+((y*cos(2*PI*FinTime) - x*sin(2*PI*FinTime))*(y*cos(2*PI*FinTime) - x*sin(2*PI*FinTime))))/(2.0*(1.0/8.0)*(1.0/8.0)))" />
    </EXACTSOLUTION>
    
    <INITIALCONDITIONS>
      <F VAR="u" VALUE="exp(-(((x+0.5)*(x+0.5))+(y*y))/(2.0*(1.0/8.0)*(1.0/8.0)))" />
    </INITIALCONDITIONS>
    
  </CONDITIONS>
  
</NEKTAR>

