<?xml version="1.0" encoding="utf-8"?>
<NEKTAR>
    <CONDITIONS>

        <!-- Removed redundancy since we can specify any level of granularity
         in the ExpansionTypes section below.-->
        <PARAMETERS>
            <P> Lambda = 10 </P>
            <!-- Some comment here -->
            <P> Tolerance = 0.0000000001 </P>
        </PARAMETERS>

        <!--One of these for each dimension. These are the vector components, say,
        s = (u,v); comprised of two components in this example for a 2D
        dimension.-->
        <VARIABLES>
            <V ID="0"> u </V> 
            <!-- Comment test -->
            <V ID="1"> v </V>
            <!-- Another comment -->
        </VARIABLES>

        <!--These composites must be defined in the geometry file.-->
        <BOUNDARYREGIONS>
            <B ID="0"> C[0] </B>
            <B ID="1"> C[1] </B>
        </BOUNDARYREGIONS>

        <!-- We can revisit this since the syntax is not complete.
             We will allow domain, composite, or boundary.-->
        <EXPANSIONTYPE>
            Domain = eModifiedA, eModifiedB, NumModes = N (or f(x,y)), eGLL,
            Ptype = (order + 1)
            BoundaryRegion[0-1] = eLagrangeGLL, eGLR
        </EXPANSIONTYPE>

        <!--The region numbers below correspond to the regions specified in the
        BoundaryRegion definition above.-->
        <BOUNDARYCONDITIONS>
            <REGION REF="0">
                <D VAR="u" VALUE="f(x,y)" />
                <N VAR="v" VALUE="g(x,y)" />
            </REGION>

            <!-- Notice that the variable order has been reversed. -->
            <REGION REF="1">
                <R VAR="v" A="a(x,y)" B="b(x,y)" />
                <D VAR="u" /> <!-- u = 0 -->
            </REGION>

            <!--<REGION ID="2">
                <D> </D> u,v = 0; all vars equal to zero
            </REGION>

            <REGION ID="3">
                <R>u, a(x,y), b(x,y) </R>
            </REGION>-->
        </BOUNDARYCONDITIONS>

        <FORCING>
            <F> u , f(x, y, z, t) </F>
            <F> v , g(x, y, z, t) </F>
        </FORCING>

        <INITIALCONDITIONS>
            <I> u , f(x, y, z) </I>
            <I> v , g(x, y, z) </I>
        </INITIALCONDITIONS>
    </CONDITIONS>
</NEKTAR>