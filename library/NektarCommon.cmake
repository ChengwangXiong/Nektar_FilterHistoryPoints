
SET(NEKTAR_USE_MKL OFF CACHE BOOL "Use the Intel Math Kernel Library (MKL) for BLAS and Lapack support." )

IF( APPLE )
    SET(NEKTAR_USE_FRAMEWORK ON CACHE BOOL "Use the Mac Framework system for BLAS and Lapack support." )
ENDIF(APPLE)

SET(NEKTAR_USE_ACML OFF CACHE BOOL "Use the AMD Core Math Library (ACML) for BLAS and Lapack support." )
SET(NEKTAR_USE_ATLAS OFF CACHE BOOL "Use ATLAS for BLAS and Lapack support." )
SET(NEKTAR_USE_WIN32_LAPACK ${Win32LapackDefault} CACHE BOOL "Use Win32 Lapack provided with the Third Party Distribution.")
SET(NEKTAR_USE_MEMORY_POOLS ON CACHE BOOL "Use memory pools to accelerate memory allocation.")
SET(NEKTAR_USE_BLAS_LAPACK ON CACHE BOOL "Use Blas and lapack routines.")
MARK_AS_ADVANCED(NEKTAR_USE_BLAS_LAPACK)

IF( NEKTAR_USE_MKL )
    INCLUDE (FindMKL)
ENDIF( NEKTAR_USE_MKL )

IF( NEKTAR_USE_FRAMEWORK )
    INCLUDE (FindFramework)
ENDIF( NEKTAR_USE_FRAMEWORK )

IF( NEKTAR_USE_ATLAS )
    INCLUDE( FindAtlas )
ENDIF( NEKTAR_USE_ATLAS )

IF( NEKTAR_USE_ACML )
    INCLUDE (FindACML)
ENDIF( NEKTAR_USE_ACML )

IF( NEKTAR_USE_WIN32_LAPACK )
    INCLUDE (FindWin32Lapack)
ENDIF( NEKTAR_USE_WIN32_LAPACK )

IF( NEKTAR_USE_MKL )
    SET(NEKTAR_USING_BLAS TRUE)
    SET(NEKTAR_USING_LAPACK TRUE)
    SET(NEKTAR_USING_MKL TRUE)
    ADD_DEFINITIONS(-DNEKTAR_USING_LAPACK -DNEKTAR_USING_BLAS)	
ENDIF( NEKTAR_USE_MKL )

IF( NEKTAR_USE_ATLAS )
    SET(NEKTAR_USING_BLAS TRUE)
    SET(NEKTAR_USING_ATLAS TRUE)
    ADD_DEFINITIONS(-DNEKTAR_USING_LAPACK -DNEKTAR_USING_BLAS)	
ENDIF( NEKTAR_USE_ATLAS )

IF( NEKTAR_USE_ACML )
    SET(NEKTAR_USING_BLAS TRUE)
    SET(NEKTAR_USING_LAPACK TRUE)
    SET(NEKTAR_USING_ACML TRUE)
    ADD_DEFINITIONS(-DNEKTAR_USING_LAPACK -DNEKTAR_USING_BLAS -DUSE_ACML)
    ADD_DEFINITIONS(-DNEKTAR_USING_LAPACK -DNEKTAR_USING_BLAS)
ENDIF( NEKTAR_USE_ACML )

IF( NEKTAR_USE_BLAS_LAPACK )
    ADD_DEFINITIONS( -DNEKTAR_USING_LAPACK -DNEKTAR_USING_BLAS )
ENDIF( NEKTAR_USE_BLAS_LAPACK )


MACRO(SET_LAPACK_LINK_LIBRARIES name)
    IF( NEKTAR_USE_BLAS_LAPACK )
        IF( NEKTAR_USE_MKL AND MKL_FOUND )
            TARGET_LINK_LIBRARIES(${name} ${MKL_LAPACK} optimized ${MKL} debug ${MKL} ${MKL_GUIDE})
        ENDIF( NEKTAR_USE_MKL AND MKL_FOUND )
        
        IF( NEKTAR_USE_ACML AND ACML_FOUND )
            TARGET_LINK_LIBRARIES(${name} ${ACML_TARGET_LINK_LIBRARIES}  )
        ENDIF( NEKTAR_USE_ACML AND ACML_FOUND )

        IF( NEKTAR_USE_FRAMEWORK )
            TARGET_LINK_LIBRARIES(${name} ${FRAMEWORK_LINK_FLAGS})
        ENDIF ( NEKTAR_USE_FRAMEWORK )

        IF( NEKTAR_USE_WIN32_LAPACK )
	        TARGET_LINK_LIBRARIES(${name} ${WIN32_LAPACK} ${WIN32_BLAS})	
        ENDIF( NEKTAR_USE_WIN32_LAPACK )

	IF( USE_ATLAS AND ATLAS_FOUND )
        	TARGET_LINK_LIBRARIES(${name}
            		${ATLAS_LAPACK}
            		${ATLAS_CBLAS}
            		${ATLAS} )
	ENDIF( USE_ATLAS AND ATLAS_FOUND )

        IF( NEKTAR_USE_METIS )    
            TARGET_LINK_LIBRARIES(${name} optimized ${METIS_LIB} debug ${METIS_LIB} )
            ENDIF( NEKTAR_USE_METIS )
    ENDIF( NEKTAR_USE_BLAS_LAPACK )
ENDMACRO(SET_LAPACK_LINK_LIBRARIES name)